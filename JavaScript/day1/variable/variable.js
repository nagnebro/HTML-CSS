
// 변수

// 문자열을 저장할 때 자바와 다르게 외따옴펴를 써도 가능하다.
// 그리고 변수 선언할때 타입을 지정하지 않아도 된다. 자바스크립트가 알아서 데이터 타입을 파악해서 저장한다.

/*
let name1=  "이서희";
let name2 = '강동원';

console.log(name1);
console.log(name2);



const number = 1;
console.log(number);
numer = 10;  // 상수값이 바뀌는지보자.
// 개발자 도구의 콘솔창을 확인해보면 상수값을 변경해도 저장이 안된 것을 확인할 수 있다. 그러나 자바처럼 컴파일
// 에러가 발생하진 않는다.


console.log(number);


console.log(a);
let a = 10;

console.log(a);
*/




//호이스팅
console.log(b);
var b = 10;

console.log(b);

// 위 코드는 원래라면 컴파일 에러가 발생해야 하지만 자바스크립트에서는 전체 코드를 읽은 후에
// var 타입의 변수라면 메모리공간에 변수를 올려둔다. 이를 호이스팅이라고 하며
// 정의되지 않은 변수를 미리 메모리에 올린다는 점에서 문제가 발생할 수 있다. 또한 변수의 중복선언이 가능하다.



{

    var c = 10000;
}
console.log(c); // 또한 var 변수는 위와 같은 특징도 가지고 있다.
// 원래 메서드 블럭 내에서 선언된 변수를 메서드 밖에서 실행하면 undefined가 선언돼야하는데
// 위와 같이 변수 c가 출력되는 것을 알 수 있다.

for(var i = 0 ; i<5 ; i++){

    console.log(i);

}
console.log(i);
// 위와 같이 for문이 끝났음에도 초기 변수 선언된 i값이 출력됨을 알 수 있다.

// 그래서 var 변수타입의 대표적 문제점은
// 1. 호이스팅
// 2. 변수 중복 선언 가능(변수 초기화 가능)이 있다.
// 3. 변수가 유효범위 개념이 없다.


// 자바스크립트는 정수와 실수를 구분하지 않는다.
// 숫자 타입은 number

// 문자 타입은 String

// function 타입ㅇ느 
